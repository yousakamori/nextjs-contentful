{"ast":null,"code":"var _jsxFileName = \"/Users/you/programs/nextjs/nextjs-contentful/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Post from '../components/post.js';\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  async function fetchEntries() {\n    const entries = await client.getEntries();\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  } // const [posts, setPosts] = useState([])\n\n\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(null);\n  useEffect(() => {\n    async function getPosts() {\n      const allPosts = await fetchEntries();\n      setPosts([...allPosts]);\n    }\n\n    getPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Next.js + Contentful\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), posts.length > 0 ? posts.map(p => __jsx(Post // key={p.sys.id}\n  , {\n    image: p.fields.image,\n    title: p.fields.title,\n    body: p.fields.body,\n    slug: p.fields.slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })) : null);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/you/programs/nextjs/nextjs-contentful/pages/index.js"],"names":["useEffect","useState","Head","Post","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","HomePage","fetchEntries","entries","getEntries","items","console","log","contentType","name","posts","setPosts","getPosts","allPosts","length","map","p","fields","image","title","body","slug"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BAD6B;AAEhDC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFuB,CAAnC,CAAf;;AAKA,SAASC,QAAT,GAAoB;AAClB,iBAAeC,YAAf,GAA8B;AAC5B,UAAMC,OAAO,GAAG,MAAMX,MAAM,CAACY,UAAP,EAAtB;AACA,QAAID,OAAO,CAACE,KAAZ,EAAmB,OAAOF,OAAO,CAACE,KAAf;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BC,WAAW,CAACC,IAAK,GAA1D;AACD,GALiB,CAOlB;;;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBtB,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAewB,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMX,YAAY,EAAnC;AACAS,MAAAA,QAAQ,CAAC,CAAC,GAAGE,QAAJ,CAAD,CAAR;AACD;;AACDD,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;AAQA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,4BAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASGF,KAAK,CAACI,MAAN,GAAe,CAAf,GACGJ,KAAK,CAACK,GAAN,CAAUC,CAAC,IACT,MAAC,IAAD,CACE;AADF;AAEE,IAAA,KAAK,EAAEA,CAAC,CAACC,MAAF,CAASC,KAFlB;AAGE,IAAA,KAAK,EAAEF,CAAC,CAACC,MAAF,CAASE,KAHlB;AAIE,IAAA,IAAI,EAAEH,CAAC,CAACC,MAAF,CAASG,IAJjB;AAKE,IAAA,IAAI,EAAEJ,CAAC,CAACC,MAAF,CAASI,IALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAUG,IAnBN,CADF;AAuBD;;AAED,eAAepB,QAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport Post from '../components/post.js'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n  async function fetchEntries() {\n    const entries = await client.getEntries()\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  // const [posts, setPosts] = useState([])\n  const [posts, setPosts] = useState(null)\n\n  useEffect(() => {\n    async function getPosts() {\n      const allPosts = await fetchEntries()\n      setPosts([...allPosts])\n    }\n    getPosts()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>Next.js + Contentful</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\"\n        />\n      </Head>\n      {posts.length > 0\n        ? posts.map(p => (\n            <Post\n              // key={p.sys.id}\n              image={p.fields.image}\n              title={p.fields.title}\n              body={p.fields.body}\n              slug={p.fields.slug}\n            />\n          ))\n        : null}\n    </>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}